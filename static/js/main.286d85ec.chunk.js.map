{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","numberOfPage","_jsxs","className","children","_jsx","href","onClick","map","page","concat","App","_useState","useState","_useState2","_slicedToArray","setPerPage","_useState3","_useState4","setCurrentPage","firstItemOnPage","lastItemOnPage","min","itemsOnPage","id","value","onChange","event","target","handleChangePerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAHC,GAKjC,IAJLC,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAef,EAAW,EAAGY,GAEnC,OACEI,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MACEF,UACkB,IAAhBP,EACI,qBACA,YACLQ,SAEDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,WACa,IAAhBX,GACFC,EAAaD,EAAc,IAE7BQ,SACH,WAIFH,EAAaO,KAAI,SAAAC,GAAI,OACpBJ,cAAA,MAEEF,UACEM,IAASb,EACL,mBACA,YACLQ,SAEDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAI,IAAAI,OAAMD,GACVF,QAAS,WACPV,EAAaY,IACbL,SAEDK,KAfEA,MAoBTJ,cAAA,MACEF,UACEP,IAAgBE,EACZ,qBACA,YACLM,SAEDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QAAS,WACHX,IAAgBE,GAClBD,EAAaD,EAAc,IAE7BQ,SACH,eC5EIO,EAAgB,WAC3B,IACAC,EAA8BC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAlCjB,EAAOmB,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAsCJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAA1CrB,EAAWsB,EAAA,GAAEC,EAAcD,EAAA,GAC5BE,EAAkBzB,GAAWC,EAAc,GAAK,EAChDyB,EAAiBtB,KAAKuB,IAAI3B,EAAUC,EAJ5B,IAKR2B,EAAcrC,EAAWkC,EAAiBC,GAWhD,OACEnB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAM,OACvBd,EAAW,YAAAc,OAAWU,EAAe,OAAAV,OAAMW,EAAc,QAAAX,OArB1D,GAqBsE,OAGhFR,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRsB,GAAG,kBACHrB,UAAU,eACVsB,MAAO9B,EACP+B,SAAU,SAACC,GAAK,OAxBE,SAACA,GAC3BX,GAAYW,EAAMC,OAAOH,OACzBN,EAAe,GAsBcU,CAAoBF,IAAOvB,SAAA,CAEhDC,cAAA,UAAQoB,MAAO,EAAErB,SAAC,MAClBC,cAAA,UAAQoB,MAAO,EAAErB,SAAC,MAClBC,cAAA,UAAQoB,MAAO,GAAGrB,SAAC,OACnBC,cAAA,UAAQoB,MAAO,GAAGrB,SAAC,YAIvBC,cAAA,SAAOyB,QAAQ,kBAAkB3B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACb,EAAU,CACTE,MA9CQ,GA+CRC,QAASA,EACTC,YAAaA,EACbC,aArCmB,SAACY,GACxBU,EAAeV,MAuCbJ,cAAA,MAAAD,SACGmB,EAAYf,KAAI,SAAAuB,GAAI,OACnB1B,cAAA,MAEE,UAAQ,OAAMD,SAAA,QAAAM,OAELqB,IAHJA,YC1DjBC,IAASC,OAAO5B,cAACM,EAAG,IAAKuB,SAASC,eAAe,U","file":"static/js/main.286d85ec.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const numberOfPage = getNumbers(1, lastPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          currentPage === 1\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {numberOfPage.map(page => (\n        <li\n          key={page}\n          className={\n            page === currentPage\n              ? 'page-item active'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={\n          currentPage === lastPage\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItemOnPage = perPage * (currentPage - 1) + 1;\n  const lastItemOnPage = Math.min(perPage * currentPage, total);\n  const itemsOnPage = getNumbers(firstItemOnPage, lastItemOnPage);\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => handleChangePerPage(event)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}